set nocompatible

call plug#begin('~/.vim/bundle')

" General
Plug 'ConradIrwin/vim-bracketed-paste'
Plug 'Shougo/context_filetype.vim'
Plug 'dhruvasagar/vim-vinegar'
Plug 'djoshea/vim-autoread'
Plug 'editorconfig/editorconfig-vim'
Plug 'haya14busa/is.vim'
Plug 'haya14busa/vim-asterisk'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'milkypostman/vim-togglelist'
Plug 'lukas-reineke/indent-blankline.nvim'
Plug 'ruanyl/vim-gh-line'
Plug 'kyazdani42/nvim-tree.lua'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'troydm/easybuffer.vim'
Plug 'tyru/caw.vim'
Plug 'wellle/targets.vim'

" Git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" Tmux
Plug 'christoomey/vim-tmux-navigator'

" Fancy
Plug 'itchyny/lightline.vim'
Plug 'mgee/lightline-bufferline'

" Writing
Plug 'tpope/vim-markdown', { 'for': 'markdown' }

" Ctags
Plug 'majutsushi/tagbar'
Plug 'szw/vim-tags'

" Color
Plug 'chriskempson/base16-vim'

" coc
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Python
Plug 'tweekmonster/impsort.vim', { 'for': 'python' }
Plug 'heavenshell/vim-pydocstring'
Plug 'numirias/semshi', { 'for': 'python', 'do': ':UpdateRemotePlugins'}

" Programming
Plug 'jpalardy/vim-slime'
Plug 'tarekbecker/vim-yaml-formatter', { 'for': 'yaml' }
Plug 'numToStr/Comment.nvim'
Plug 'tyru/open-browser.vim'
Plug 'tyru/open-browser-github.vim'
Plug 'lukas-reineke/indent-blankline.nvim'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'nvim-treesitter/nvim-treesitter-context'

" Web dev
Plug 'alvan/vim-closetag', { 'for': 'html' }
Plug 'chrisbra/csv.vim', { 'for': 'csv' }
Plug 'ekalinin/Dockerfile.vim', { 'for': 'Dockerfile' }
Plug 'leafgarland/typescript-vim'
Plug 'peitalin/vim-jsx-typescript'

if filereadable(expand("~/.vimrc.bundles.local"))
    source ~/.vimrc.bundles.local
endif

call plug#end()

autocmd VimEnter *
  \  if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \|   PlugInstall --sync | q
  \| endif
